openapi: 3.0.3
info:
  title: Userlist Push API
  version: '1.0'
  contact:
    name: Userlist
    url: 'https://userlist.com'
    email: support@userlist.com
  description: |
    Userlist's Push API allows you to send data into Userlist.
servers:
  - url: 'https://push.userlist.com'
paths:
  /users:
    post:
      summary: Create or update a user
      operationId: push-user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            examples: {}
        description: Post the necessary fields for the API to create a new user.
      description: Create or update a user.
      responses:
        '202':
          $ref: '#/components/responses/Accepted'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      tags:
        - user
    delete:
      summary: Delete a user
      operationId: delete-user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseUser'
            examples: {}
        description: Post the necessary fields for the API to delete a user.
      responses:
        '202':
          $ref: '#/components/responses/Accepted'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      tags:
        - user
  /companies:
    post:
      summary: Create or update a company
      operationId: push-company
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
            examples: {}
        description: Post the necessary fields for the API to create a new company.
      description: Create or update a company.
      responses:
        '202':
          $ref: '#/components/responses/Accepted'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      tags:
        - company
    delete:
      summary: Delete a company
      operationId: delete-company
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseCompany'
            examples: {}
        description: Post the necessary fields for the API to delete a company.
      responses:
        '202':
          $ref: '#/components/responses/Accepted'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      tags:
        - company
  /relationships:
    post:
      summary: Create or update a relationship
      description: Create or update a relationship
      tags:
        - relationship
      responses:
        '202':
          $ref: '#/components/responses/Accepted'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      operationId: push-relationship
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Relationship'
            examples: {}
    delete:
      summary: Delete a relationship
      operationId: delete-relationship
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  oneOf:
                    - $ref: '#/components/schemas/IdentifierValue'
                    - $ref: '#/components/schemas/BaseUser'
                company:
                  oneOf:
                    - $ref: '#/components/schemas/IdentifierValue'
                    - $ref: '#/components/schemas/BaseCompany'
              required:
                - user
                - company
            examples: {}
        description: Post the necessary fields for the API to delete a relationship.
      responses:
        '202':
          $ref: '#/components/responses/Accepted'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      tags:
        - relationship
  /events:
    post:
      summary: Create an event
      description: Create an event
      tags:
        - event
      responses:
        '202':
          $ref: '#/components/responses/Accepted'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
      operationId: push-event
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
            examples: {}
components:
  schemas:
    IdentifierValue:
      type:
        - string
        - number
    BaseUser:
      allOf:
        - type: object
          properties:
            identifier:
              $ref: '#/components/schemas/IdentifierValue'
            email:
              type: string
              format: email
            identifiers:
              type: array
              items:
                type: object
                properties:
                  identifier:
                    $ref: '#/components/schemas/IdentifierValue'
                  scope:
                    type: string
                required:
                  - identifier
                  - scope
        - oneOf:
          - required:
            - email
          - required:
            - identifier
          - required:
            - identifiers
    User:
      title: User
      type: object
      description: ''
      allOf:
        - $ref: '#/components/schemas/BaseUser'
        - properties:
            properties:
              type: object
            signed_up_at:
              type: string
              format: date-time
            last_seen_at:
              type: string
              format: date-time
            unsubscribed_at:
              type: string
              format: date-time
        - oneOf:
          - properties:
              company:
                $ref: '#/components/schemas/CompanyRef'
            title: User with company
          - properties:
              companies:
                type: array
                items:
                  $ref: '#/components/schemas/CompanyRef'
          - properties:
              relationships:
                type: array
                items:
                  $ref: '#/components/schemas/Relationship'
    UserRef:
      oneOf:
        - $ref: '#/components/schemas/IdentifierValue'
        - $ref: '#/components/schemas/User'

    BaseCompany:
      type: object
      properties:
        identifier:
          $ref: '#/components/schemas/IdentifierValue'
        identifiers:
          type: array
          items:
            type: object
            properties:
              identifier:
                $ref: '#/components/schemas/IdentifierValue'
              scope:
                type: string
            required:
              - identifier
              - scope
      oneOf:
        - required:
          - identifier
        - required:
          - identifiers
    Company:
      title: Company
      type: object
      description: ''
      allOf:
        - $ref: '#/components/schemas/BaseCompany'
        - properties:
            name:
              type: string
            signed_up_at:
              type: string
              format: date-time
            last_seen_at:
              type: string
              format: date-time
            unsubscribed_at:
              type: string
              format: date-time
            properties:
              type: object
        - oneOf:
          - properties:
              user:
                $ref: '#/components/schemas/UserRef'
          - properties:
              users:
                type: array
                items:
                  $ref: '#/components/schemas/UserRef'
          - properties:
              relationships:
                type: array
                items:
                  $ref: '#/components/schemas/Relationship'
    CompanyRef:
      oneOf:
        - $ref: '#/components/schemas/IdentifierValue'
        - $ref: '#/components/schemas/Company'

    BaseRelationship:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserRef'
        company:
          $ref: '#/components/schemas/CompanyRef'
      required:
        - user
        - company
    Relationship:
      allOf:
        - $ref: '#/components/schemas/BaseRelationship'
        - title: Relationship
          type: object
          properties:
            properties:
              type: object

    Event:
      title: Event
      type: object
      properties:
        name:
          type: string
        properties:
          type: object
        occurred_at:
          type: string
          format: date-time
      required:
        - name
      anyOf:
        - properties:
            user:
              $ref: '#/components/schemas/UserRef'
          required:
            - user
        - properties:
            company:
              $ref: '#/components/schemas/CompanyRef'
          required:
            - company
        - properties:
            user:
              $ref: '#/components/schemas/UserRef'
            company:
              $ref: '#/components/schemas/CompanyRef'
          required:
            - user
            - company

    Error:
      title: Error
      type: object
      properties:
        status:
          type: integer
        code:
          type: string
        errors:
          type: array
          items:
            type: string
  securitySchemes:
    pushKey:
      type: apiKey
      name: Authorization
      in: header
      description: Prefix the Push Key with the keyword "Push" to indicate its type.
  responses:
    Accepted:
      description: Accepted
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    UnprocessableEntity:
      description: Unprocessable Entity
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
security:
  - pushKey: []
tags:
  - name: user
  - name: company
  - name: relationship
  - name: event
